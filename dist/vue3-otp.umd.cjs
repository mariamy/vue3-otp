(function(t,c){typeof exports=="object"&&typeof module<"u"?module.exports=c(require("vue")):typeof define=="function"&&define.amd?define(["vue"],c):(t=typeof globalThis<"u"?globalThis:t||self,t.Vue3Otp=c(t.Vue))})(this,function(t){"use strict";var c=(s=>(s[s.prev=1]="prev",s[s.next=2]="next",s))(c||{});const x=["onUpdate:modelValue","autocomplete","placeholder","onInput","onKeyup","onPaste"];return t.defineComponent({__name:"Vue3Otp",props:{inputsCount:{type:Number,default:4},modelValue:{type:String,default:""},placeholder:{type:Array,default:["","","",""]},classes:{type:Array,default:["","","",""]}},emits:["update:modelValue","complete"],setup(s,{emit:V}){const i=s,f=V,m=t.ref(),a=t.ref([]),p=t.computed(()=>{var e;return(e=m.value)==null?void 0:e.querySelectorAll("input")}),y=e=>{d(e),D(e)},d=e=>f("update:modelValue",e.join("")),k=(e,o)=>{e.replace(/[^0-9]/g,"").split("").forEach(l=>{o<i.inputsCount&&(a.value[o]=l,o++)}),p.value[0].blur()},r=(e,o=1)=>{if(p.value)if(o===c.prev){const n=p.value[e-1];n&&n.focus()}else{const n=p.value[e+1];n?n.focus():v()===-1&&p.value[e].blur()}},g=e=>{const o=e.key;/[^0-9]/g.test(o)&&e.preventDefault()},C=(e,o)=>{const n=e.data||e.target.value;!n||isNaN(parseInt(n))||(n.length>1?k(n,o):(a.value[o]=n,r(o,2)),y(a.value))},B=(e,o)=>{const n=e.key,l=e.code;n==="Backspace"||l==="Backspace"||n==="Delete"||l==="Delete"||n==="ArrowLeft"?r(o):n==="ArrowRight"&&r(o,2),d(a.value)},v=()=>a.value.findIndex(e=>isNaN(parseInt(e))),D=e=>{e.length===i.inputsCount&&v()===-1&&f("complete",a.value.join(""))},h=()=>{const e=i.modelValue.replace(/[^0-9]/g,"").split("");a.value=e.map(o=>o),d(a.value),t.nextTick(()=>r(e.length-1,2))},I=(e,o)=>{var l;e.preventDefault();let n=(l=e.clipboardData)==null?void 0:l.getData("text/plain");n&&(k(n,o),y(a.value))};return t.watch(()=>i.modelValue,e=>{a.value.join("")!==e&&h()}),t.onMounted(()=>h()),(e,o)=>(t.openBlock(),t.createElementBlock("div",{class:"vue3-otp",ref_key:"inputsContainerRef",ref:m},[(t.openBlock(!0),t.createElementBlock(t.Fragment,null,t.renderList(s.inputsCount,(n,l)=>t.withDirectives((t.openBlock(),t.createElementBlock("input",{key:n,type:"text",inputmode:"numeric","onUpdate:modelValue":u=>a.value[l]=u,autocomplete:l===0?"one-time-code":"off",placeholder:s.placeholder[l]||"",class:t.normalizeClass([`vue3-otp-input-${l}`,s.classes[l]]),onKeypress:g,onInput:u=>C(u,l),onKeyup:u=>B(u,l),onPaste:u=>I(u,l)},null,42,x)),[[t.vModelText,a.value[l]]])),128))],512))}})});
